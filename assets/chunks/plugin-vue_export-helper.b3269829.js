import{S as g,e as V,aa as h,ab as y,ac as P,f as C,b as x}from"./framework.ac0b83b1.js";const B=()=>g("ThemeContext"),F=(e,a)=>{const s=B();return V(()=>e?typeof e=="function"?e(s.value):typeof e=="string"&&e in s.value.palette?`var(--md-sys-color-${e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()})`:e:a??null)};function G(e,a){return e.install=s=>{s.component(a,e)},e}const L=(e,a)=>(e.install=s=>{e._context=s._context,s.config.globalProperties[a]=e},e);function O(e){for(var a=-1,s=e==null?0:e.length,c={};++a<s;){var o=e[a];c[o[0]]=o[1]}return c}const w="__epPropKey",K=e=>h(e)&&!!e[w],I=(e,a)=>{if(!h(e)||K(e))return e;const{values:s,required:c,default:o,type:u,validator:$}=e,m={type:u,required:!!c,validator:s||$?f=>{let l=!1,v=[];if(s&&(v=Array.from(s),y(e,"default")&&v.push(o),l||(l=v.includes(f))),$&&(l||(l=$(f))),!l&&v.length>0){const d=[...new Set(v)].map(p=>JSON.stringify(p)).join(", ");P(`Invalid prop: validation failed${a?` for prop "${a}"`:""}. Expected one of [${d}], got value ${JSON.stringify(f)}.`)}return l}:void 0,[w]:!0};return y(e,"default")&&(m.default=o),m},Z=e=>O(Object.entries(e).map(([a,s])=>[a,I(s,a)])),_="fn",S="is-",i=(e,a,s,c,o)=>{let u=`${e}-${a}`;return s&&(u+=`-${s}`),c&&(u+=`__${c}`),o&&(u+=`--${o}`),u},T=Symbol("namespaceContextKey"),q=e=>{const a=e||g(T,C(_));return V(()=>x(a)||_)},H=(e,a)=>{const s=q(a);return{namespace:s,b:(t="")=>i(s.value,e,t,"",""),e:t=>t?i(s.value,e,"",t,""):"",m:t=>t?i(s.value,e,"","",t):"",be:(t,n)=>t&&n?i(s.value,e,t,n,""):"",em:(t,n)=>t&&n?i(s.value,e,"",t,n):"",bm:(t,n)=>t&&n?i(s.value,e,t,"",n):"",bem:(t,n,r)=>t&&n&&r?i(s.value,e,t,n,r):"",is:(t,...n)=>{const r=n.length>=1?n[0]:!0;return t&&r?`${S}${t}`:""},cssVar:t=>{const n={};for(const r in t)t[r]&&(n[`--${s.value}-${r}`]=t[r]);return n},cssStyle:t=>{const n={};for(const r in t)t[r]&&(n[`${r}`]=t[r]);return n},cssVarName:t=>`--${s.value}-${t}`,cssVarBlock:t=>{const n={};for(const r in t)t[r]&&(n[`--${s.value}-${e}-${r}`]=t[r]);return n},cssVarBlockName:t=>`--${s.value}-${e}-${t}`,getCssVar:t=>`var(--${s.value}-${t})`,getCssVarBlock:(t,n=e)=>`var(--${s.value}-${n}-${t})`}};var M=(e,a)=>{const s=e.__vccOpts||e;for(const[c,o]of a)s[c]=o;return s};export{M as _,H as a,Z as b,L as c,B as d,F as u,G as w};
